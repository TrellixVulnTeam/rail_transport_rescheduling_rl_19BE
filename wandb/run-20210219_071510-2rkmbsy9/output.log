/Users/stlp/Desktop/VRSP/rail_transport_rescheduling_rl/wandb/run-20210219_071510-2rkmbsy9
2021-02-18 23:15:12,235	INFO resource_spec.py:212 -- Starting Ray with 2.0 GiB memory available for workers and up to 1.0 GiB for objects. You can adjust these settings with ray.init(memory=<bytes>, object_store_memory=<bytes>).
2021-02-18 23:15:12,608	INFO services.py:1170 -- View the Ray dashboard at [1m[32mlocalhost:8265[39m[22m
2021-02-18 23:15:13,188	INFO trainer.py:421 -- Tip: set 'eager': true or the --eager flag to enable TensorFlow eager execution
2021-02-18 23:15:13,235	INFO trainer.py:580 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
==================================================
{'grid_mode': False,
 'height': 50,
 'max_num_cities': 6,
 'max_rails_between_cities': 4,
 'max_rails_in_city': 4,
 'number_of_agents': 15,
 'regenerate_rail_on_reset': True,
 'regenerate_schedule_on_reset': True,
 'seed': 1234,
 'width': 50}
==================================================
2021-02-18 23:15:20,524	WARNING trainer_template.py:124 -- The experimental distributed execution API is enabled for this algorithm. Disable this by setting 'use_exec_api': False.
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config medium_stoch_v2 from medium_stoch_v2.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_stoch_v0 from small_stoch_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config medium_v0 from medium_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config 32x32_v0 from 32x32_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_stoch_v1 from small_stoch_v1.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_triple_v0 from small_triple_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_single_v0 from small_single_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config large_stoch_v0 from large_stoch_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_double_v0 from small_double_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config adrian_v0 from adrian_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config small_v0 from small_v0.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Generator Config medium_stoch_v1 from medium_stoch_v1.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Evaluation Config enable_explore from enable_explore.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Evaluation Config default_render from default_render.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Evaluation Config test_render from test_render.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Evaluation Config default from default.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config medium_stoch_v2 from medium_stoch_v2.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_stoch_v0 from small_stoch_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config medium_v0 from medium_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config 32x32_v0 from 32x32_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_stoch_v1 from small_stoch_v1.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_triple_v0 from small_triple_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_single_v0 from small_single_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config large_stoch_v0 from large_stoch_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_double_v0 from small_double_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config adrian_v0 from adrian_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config small_v0 from small_v0.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Generator Config medium_stoch_v1 from medium_stoch_v1.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Evaluation Config enable_explore from enable_explore.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Evaluation Config default_render from default_render.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Evaluation Config test_render from test_render.yaml
[2m[36m(pid=33212)[0m -    Successfully Loaded Evaluation Config default from default.yaml
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class LocalConflictObs from local_conflict_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class ForwardActionObs from forward_action_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class CombinedObs from combined_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class NewTreeObsBuilder from new_tree_obs_builder.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class NewTreeObs from new_tree_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class RandomActionObs from random_action_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class GlobalDensityObs from global_density_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class ShortestPathObs from shortest_path_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class Utils from utils.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class GlobalObs from global_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class TreeObs from tree_obs.py
[2m[36m(pid=33214)[0m -    Successfully Loaded Observation class ShortestPathActionObs from shortest_path_action_obs.py
[2m[36m(pid=33214)[0m ==================================================
[2m[36m(pid=33214)[0m {'grid_mode': False,
[2m[36m(pid=33214)[0m  'height': 50,
[2m[36m(pid=33214)[0m  'max_num_cities': 6,
[2m[36m(pid=33214)[0m  'max_rails_between_cities': 4,
[2m[36m(pid=33214)[0m  'max_rails_in_city': 4,
[2m[36m(pid=33214)[0m  'number_of_agents': 15,
[2m[36m(pid=33214)[0m  'regenerate_rail_on_reset': True,
[2m[36m(pid=33214)[0m  'regenerate_schedule_on_reset': True,
[2m[36m(pid=33214)[0m  'seed': 1234,
[2m[36m(pid=33214)[0m  'width': 50}
[2m[36m(pid=33214)[0m ==================================================
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class LocalConflictObs from local_conflict_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class ForwardActionObs from forward_action_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class CombinedObs from combined_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class NewTreeObsBuilder from new_tree_obs_builder.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class NewTreeObs from new_tree_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class RandomActionObs from random_action_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class GlobalDensityObs from global_density_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class ShortestPathObs from shortest_path_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class Utils from utils.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class GlobalObs from global_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class TreeObs from tree_obs.py
[2m[36m(pid=33212)[0m -    Successfully Loaded Observation class ShortestPathActionObs from shortest_path_action_obs.py
[2m[36m(pid=33212)[0m ==================================================
[2m[36m(pid=33212)[0m {'grid_mode': False,
[2m[36m(pid=33212)[0m  'height': 50,
[2m[36m(pid=33212)[0m  'max_num_cities': 6,
[2m[36m(pid=33212)[0m  'max_rails_between_cities': 4,
[2m[36m(pid=33212)[0m  'max_rails_in_city': 4,
[2m[36m(pid=33212)[0m  'number_of_agents': 15,
[2m[36m(pid=33212)[0m  'regenerate_rail_on_reset': True,
[2m[36m(pid=33212)[0m  'regenerate_schedule_on_reset': True,
[2m[36m(pid=33212)[0m  'seed': 1234,
[2m[36m(pid=33212)[0m  'width': 50}
[2m[36m(pid=33212)[0m ==================================================
2021-02-18 23:15:26,863	INFO trainable.py:180 -- _setup took 13.629 seconds. If your trainable is slow to initialize, consider setting reuse_actors=True to reduce actor creation overheads.
2021-02-18 23:15:26,863	INFO trainable.py:217 -- Getting current IP.
2021-02-18 23:15:26,980	INFO trainable.py:217 -- Getting current IP.
2021-02-18 23:15:26,981	INFO trainable.py:423 -- Restored on 192.168.0.31 from checkpoint: /Users/stlp/Downloads/checkpoint-100
2021-02-18 23:15:26,981	INFO trainable.py:430 -- Current state after restoring: {'_iteration': 100, '_timesteps_total': None, '_time_total': 4314.331633806229, '_episodes_total': 173}
/Users/stlp/opt/anaconda3/envs/flatland-baseline-cpu-env/lib/python3.7/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Trying to monitor an environment which has no 'spec' set. This usually means you did not create it via 'gym.make', and is recommended only for advanced users.[0m
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
Episode #0: score: -9305.00000 (-9305.00000), normalized score: -0.75650 (-0.75650), percentage_complete: 0.26667 (0.26667)
/Users/stlp/opt/anaconda3/envs/flatland-baseline-cpu-env/lib/python3.7/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Trying to monitor an environment which has no 'spec' set. This usually means you did not create it via 'gym.make', and is recommended only for advanced users.[0m
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
Episode #1: score: -10352.00000 (-9828.50000), normalized score: -0.84163 (-0.79907), percentage_complete: 0.20000 (0.23333)
/Users/stlp/opt/anaconda3/envs/flatland-baseline-cpu-env/lib/python3.7/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Trying to monitor an environment which has no 'spec' set. This usually means you did not create it via 'gym.make', and is recommended only for advanced users.[0m
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
